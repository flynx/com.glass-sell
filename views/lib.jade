
//- XXX also include the appropriate CSS...


//-
	Usage:
		JSONTable(<css-class>, <data>)
		JSONTable(<css-class>, <data>, <col-names>)
		JSONTable(<css-class>, <data>, <col-names>, <attributes>)
//- 
	XXX make this more cleaver about arguments, e.g.
		JSONTable(<css-class>, <col-names>, <data>)
		JSONTable(<css-class>, <col-names>, <attributes>, <data>)
		...this looks more natural...

mixin JSONTable(cls, obj, cols, attrs)
	table(class=cls, border=1, cellspacing=0)
		//- build header column if cols is passed...
		if cols
			tr
				each col in cols
					th= col

		//- build table body...
		each elem in obj
			tr
				//- if attrs are suplied use them to order the values...
				if attrs
					each attr in attrs
						td= elem[attr]
				else
					each val in elem
						td= val


mixin JSONDivTable(cls, obj, cols, attrs)
	.table-block(class=cls)
		//- build header column if cols is passed...
		if cols
			.header
				each col in cols
					.cell= col

		//- build table body...
		each elem in obj
			.row
				//- if attrs are suplied use them to order the values...
				if attrs
					each attr in attrs
						.cell= elem[attr]
				else
					each val in elem
						.cell= val


//- vim:set ts=4 sw=4 :
